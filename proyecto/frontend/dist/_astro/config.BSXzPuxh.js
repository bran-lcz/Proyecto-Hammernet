const r=()=>(typeof window<"u"&&window.location.hostname!=="localhost"&&window.location.hostname!=="127.0.0.1","https://hammernet-backend.onrender.com"),n={credentials:"include",mode:"cors",headers:{Accept:"application/json","X-Requested-With":"XMLHttpRequest"}},t=e=>(console.error("Error de API:",e),e.name==="TypeError"&&e.message==="Failed to fetch"?{type:"connection",message:"No se pudo conectar con el servidor. Verifique su conexión a internet o si el servidor está disponible."}:e.name==="AbortError"?{type:"timeout",message:"La conexión al servidor ha tardado demasiado tiempo."}:e.message&&e.message.includes("CORS")?{type:"cors",message:"Error de política de CORS. El servidor no permite solicitudes desde este origen."}:{type:"unknown",message:e.message||"Error desconocido al conectar con la API"}),a=r(),i=async()=>{try{const e=new AbortController,o=setTimeout(()=>e.abort(),5e3),s=await fetch(`${a}/health`,{method:"GET",...n,signal:e.signal});return clearTimeout(o),s.ok?(console.log("Servidor disponible"),{available:!0,message:"Servidor disponible"}):(console.warn("Servidor no disponible:",s.status),{available:!1,message:`Servidor no disponible: ${s.status}`})}catch(e){const o=t(e);return console.warn("Error al verificar disponibilidad del servidor:",o.message),{available:!1,message:o.message,type:o.type}}};export{a as A,i as a,n as c,t as h};
