import"./AdminLayout.astro_astro_type_script_index_0_lang.DLKx8HaD.js";document.addEventListener("DOMContentLoaded",()=>{const g=localStorage.getItem("isLoggedIn"),E=localStorage.getItem("token");if(console.log("Usuarios Index - Estado de autenticación:",g),console.log("Usuarios Index - Token:",E?"Token presente":"Token ausente"),!g||g!=="true"||!E){console.warn("Usuario no autenticado o token ausente, redirigiendo al login"),window.location.href="/login";return}const I=document.getElementById("btnNuevoUsuario"),d=document.getElementById("formUsuario"),p=document.getElementById("formTitle"),u=document.getElementById("usuarioForm"),b=document.getElementById("btnCancelar"),h=document.getElementById("tablaUsuarios"),l=document.getElementById("userId"),v=typeof window<"u"&&window.location.hostname!=="localhost"&&window.location.hostname!=="127.0.0.1"?"https://api.render.com/deploy/srv-d1j3t42dbo4c73c3oed0?key=8xmbZwA9YQo":"http://localhost:8000";let o=[];async function f(){try{const e=await fetch(`${v}/usuarios`);if(!e.ok)throw new Error("Error al obtener usuarios");o=await e.json(),m(o)}catch(e){console.error("Error:",e),o=JSON.parse(localStorage.getItem("usuarios"))||[],o.length===0&&(o=[{id:1,nombre:"Administrador",usuario:"admin",password:"admin123",rol:"admin",fechaCreacion:new Date().toISOString()}],localStorage.setItem("usuarios",JSON.stringify(o))),m()}}function m(){h.innerHTML="",o.forEach(e=>{const a=e.username||e.usuario,r=e.role||e.rol,t=e.fecha_creacion||e.fechaCreacion,n=document.createElement("tr");n.innerHTML=`
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${e.id}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">${e.nombre}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${a}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full bg-${r==="administrador"?"green":r==="vendedor"?"blue":"yellow"}-100 text-${r==="administrador"?"green":r==="vendedor"?"blue":"yellow"}-800">
                            ${r==="administrador"?"Administrador":r==="vendedor"?"Vendedor":"Bodeguero"}
                        </span>
                    </td>
                    <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-500">${new Date(t).toLocaleDateString()}</td>
                    <td class="px-6 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <button data-id="${e.id}" class="btn-editar text-blue-600 hover:text-blue-900 mr-3">Editar</button>
                        <button data-id="${e.id}" class="btn-eliminar text-red-600 hover:text-red-900">Eliminar</button>
                    </td>
                `,h.appendChild(n)}),document.querySelectorAll(".btn-editar").forEach(e=>{e.addEventListener("click",x)}),document.querySelectorAll(".btn-eliminar").forEach(e=>{e.addEventListener("click",B)})}I.addEventListener("click",()=>{p.textContent="Nuevo Usuario",u.reset(),l.value="",d.classList.remove("hidden")}),b.addEventListener("click",()=>{d.classList.add("hidden"),u.reset()});async function x(e){const a=parseInt(e.target.dataset.id);try{const r=await fetch(`${v}/usuarios/${a}`);if(!r.ok)throw new Error("Error al obtener el usuario");const t=await r.json();p.textContent="Editar Usuario",l.value=t.id,document.getElementById("nombre").value=t.nombre,document.getElementById("usuario").value=t.username,document.getElementById("password").value="",document.getElementById("rol").value=t.role,d.classList.remove("hidden")}catch(r){console.error("Error:",r);const t=o.find(n=>n.id===a);t&&(p.textContent="Editar Usuario",l.value=t.id,document.getElementById("nombre").value=t.nombre,document.getElementById("usuario").value=t.usuario||t.username,document.getElementById("password").value="",document.getElementById("rol").value=t.rol||t.role,d.classList.remove("hidden"))}}async function B(e){const a=parseInt(e.target.dataset.id);if(confirm("¿Está seguro de eliminar este usuario?"))try{await deleteData(`/usuarios/${a}`),f(),alert("Usuario eliminado correctamente")}catch(r){console.error("Error:",r),alert(`Error: ${r.message}`),o=o.filter(t=>t.id!==a),localStorage.setItem("usuarios",JSON.stringify(o)),m()}}u.addEventListener("submit",async e=>{e.preventDefault();const a=l.value?parseInt(l.value):null,r=document.getElementById("nombre").value,t=document.getElementById("usuario").value,n=document.getElementById("password").value,c=document.getElementById("rol").value;if(!r||!t||!a&&!n||!c){alert("Por favor complete todos los campos obligatorios");return}const y={nombre:r,username:t,role:c};n.trim()&&(y.password=n);try{let i,s="";if(a)i=await updateData(`/usuarios/${a}`,y),s="Usuario actualizado correctamente";else{if(!n.trim()){alert("La contraseña es obligatoria para crear un nuevo usuario");return}i=await postData("/usuarios",y),s="Usuario creado correctamente"}if(!i)throw new Error("Error al guardar el usuario");f(),alert(s),d.classList.add("hidden"),u.reset()}catch(i){if(console.error("Error:",i),alert(`Error: ${i.message}`),a){const s=o.findIndex(w=>w.id===a);s!==-1&&(o[s]={...o[s],nombre:r,usuario:t,role:c},n.trim()&&(o[s].password=n))}else{const s=o.length>0?Math.max(...o.map(w=>w.id))+1:1;o.push({id:s,nombre:r,usuario:t,username:t,password:n,rol:c,role:c,fechaCreacion:new Date().toISOString()})}localStorage.setItem("usuarios",JSON.stringify(o)),m()}}),f()});
